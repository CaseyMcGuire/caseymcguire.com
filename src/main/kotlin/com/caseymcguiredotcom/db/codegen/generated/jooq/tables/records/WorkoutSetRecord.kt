/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.records


import generated.jooq.tables.WorkoutSet
import generated.jooq.tables.pojos.WorkoutSetTableRow

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class WorkoutSetRecord() : UpdatableRecordImpl<WorkoutSetRecord>(WorkoutSet.WORKOUT_SET) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var workoutId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var description: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var exerciseType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var numReps: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var weight: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var unitOfMass: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(7, value)
        get(): LocalDateTime? = get(7) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(8, value)
        get(): LocalDateTime? = get(8) as LocalDateTime?

    open var exerciseId: Int?
        set(value): Unit = set(9, value)
        get(): Int? = get(9) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised WorkoutSetRecord
     */
    constructor(id: Int? = null, workoutId: Int? = null, description: String? = null, exerciseType: String? = null, numReps: Int? = null, weight: Int? = null, unitOfMass: String? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null, exerciseId: Int? = null): this() {
        this.id = id
        this.workoutId = workoutId
        this.description = description
        this.exerciseType = exerciseType
        this.numReps = numReps
        this.weight = weight
        this.unitOfMass = unitOfMass
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        this.exerciseId = exerciseId
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised WorkoutSetRecord
     */
    constructor(value: WorkoutSetTableRow?): this() {
        if (value != null) {
            this.id = value.id
            this.workoutId = value.workoutId
            this.description = value.description
            this.exerciseType = value.exerciseType
            this.numReps = value.numReps
            this.weight = value.weight
            this.unitOfMass = value.unitOfMass
            this.createdAt = value.createdAt
            this.updatedAt = value.updatedAt
            this.exerciseId = value.exerciseId
            resetChangedOnNotNull()
        }
    }
}
