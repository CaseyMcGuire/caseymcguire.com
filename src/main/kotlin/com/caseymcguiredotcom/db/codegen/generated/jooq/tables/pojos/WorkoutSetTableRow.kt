/*
 * This file is generated by jOOQ.
 */
package generated.jooq.tables.pojos


import java.io.Serializable
import java.time.LocalDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class WorkoutSetTableRow(
    val id: Int? = null,
    val workoutId: Int? = null,
    val description: String? = null,
    val exerciseType: String? = null,
    val numReps: Int? = null,
    val weight: Int? = null,
    val unitOfMass: String? = null,
    val createdAt: LocalDateTime? = null,
    val updatedAt: LocalDateTime? = null,
    val exerciseId: Int? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: WorkoutSetTableRow = other as WorkoutSetTableRow
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.workoutId == null) {
            if (o.workoutId != null)
                return false
        }
        else if (this.workoutId != o.workoutId)
            return false
        if (this.description == null) {
            if (o.description != null)
                return false
        }
        else if (this.description != o.description)
            return false
        if (this.exerciseType == null) {
            if (o.exerciseType != null)
                return false
        }
        else if (this.exerciseType != o.exerciseType)
            return false
        if (this.numReps == null) {
            if (o.numReps != null)
                return false
        }
        else if (this.numReps != o.numReps)
            return false
        if (this.weight == null) {
            if (o.weight != null)
                return false
        }
        else if (this.weight != o.weight)
            return false
        if (this.unitOfMass == null) {
            if (o.unitOfMass != null)
                return false
        }
        else if (this.unitOfMass != o.unitOfMass)
            return false
        if (this.createdAt == null) {
            if (o.createdAt != null)
                return false
        }
        else if (this.createdAt != o.createdAt)
            return false
        if (this.updatedAt == null) {
            if (o.updatedAt != null)
                return false
        }
        else if (this.updatedAt != o.updatedAt)
            return false
        if (this.exerciseId == null) {
            if (o.exerciseId != null)
                return false
        }
        else if (this.exerciseId != o.exerciseId)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.workoutId == null) 0 else this.workoutId.hashCode())
        result = prime * result + (if (this.description == null) 0 else this.description.hashCode())
        result = prime * result + (if (this.exerciseType == null) 0 else this.exerciseType.hashCode())
        result = prime * result + (if (this.numReps == null) 0 else this.numReps.hashCode())
        result = prime * result + (if (this.weight == null) 0 else this.weight.hashCode())
        result = prime * result + (if (this.unitOfMass == null) 0 else this.unitOfMass.hashCode())
        result = prime * result + (if (this.createdAt == null) 0 else this.createdAt.hashCode())
        result = prime * result + (if (this.updatedAt == null) 0 else this.updatedAt.hashCode())
        result = prime * result + (if (this.exerciseId == null) 0 else this.exerciseId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("WorkoutSetTableRow (")

        sb.append(id)
        sb.append(", ").append(workoutId)
        sb.append(", ").append(description)
        sb.append(", ").append(exerciseType)
        sb.append(", ").append(numReps)
        sb.append(", ").append(weight)
        sb.append(", ").append(unitOfMass)
        sb.append(", ").append(createdAt)
        sb.append(", ").append(updatedAt)
        sb.append(", ").append(exerciseId)

        sb.append(")")
        return sb.toString()
    }
}
